version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "585768158376"
    AWS_REGION: "us-east-1"
    ECR_REPOSITORY_CLIENTE: "cliente"
    ECR_REPOSITORY_SERVIDOR: "servidor"
    IMAGE_TAG: "latest"
    TF_VAR_cliente_image: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/cliente:${IMAGE_TAG}"
    TF_VAR_servidor_image: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/servidor:${IMAGE_TAG}"
    WORKSPACE: "prod"

phases:
  install:
    commands:
      - echo "Instalando Docker..."
      - yum update -y
      - yum install -y docker
      - echo "Iniciando Docker en segundo plano..."
      - nohup dockerd &>/var/log/dockerd.log &
      - timeout 15 sh -c "until docker info; do echo 'Esperando a Docker...' && sleep 1; done"
      - echo "Docker iniciado exitosamente."
      - curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - chmod +x /usr/local/bin/docker-compose

  pre_build:
    commands:
      - echo "Iniciando sesi칩n en Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo "Construyendo las im치genes Docker..."
      - docker-compose build
      - echo "Etiquetando im치genes para Amazon ECR..."
      - docker tag cliente:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_CLIENTE:$IMAGE_TAG
      - docker tag servidor:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_SERVIDOR:$IMAGE_TAG
      - echo "Subiendo im치genes a Amazon ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_CLIENTE:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_SERVIDOR:$IMAGE_TAG

artifacts:
  files:
    - "**/*"
